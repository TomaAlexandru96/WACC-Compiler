// Generated from ./WACCLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WACCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, OPEN_PARENTHESES=2, CLOSE_PARENTHESES=3, OPEN_SQUARE_BRACKET=4, 
		CLOSE_SQUARE_BRACKET=5, IS=6, COMMA=7, CALL_FUNC=8, SKIP_STAT=9, ASSIGN_STAT=10, 
		READ_STAT=11, FREE_STAT=12, RETURN_STAT=13, EXIT_STAT=14, PRINT_STAT=15, 
		PRINTLN_STAT=16, IF_STAT=17, THEN_STAT=18, ELSE_STAT=19, FI_STAT=20, WHILE_STAT=21, 
		DO_STAT=22, DONE_STAT=23, BEGIN_STAT=24, END_STAT=25, COMPOSITION_STAT=26, 
		INT=27, BOOL=28, CHAR=29, STRING=30, NEWPAIR=31, PAIR=32, FST=33, SND=34, 
		NOT=35, MINUS=36, LENGTH=37, ORD=38, CHR=39, MULTIPLY=40, DIVISION=41, 
		MODULO=42, PLUS=43, GREATER=44, GREATER_EQ=45, SMALLER=46, SMALLER_EQ=47, 
		EQ=48, NOT_EQ=49, AND=50, OR=51, IDENT=52, INT_LITERAL=53, BOOL_LITERAL=54, 
		CHAR_LITERAL=55, STR_LITERAL=56, PAIR_LITERAL=57, COMMENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'"
	};
	public static final String[] ruleNames = {
		"WS", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_SQUARE_BRACKET", 
		"CLOSE_SQUARE_BRACKET", "IS", "COMMA", "CALL_FUNC", "SKIP_STAT", "ASSIGN_STAT", 
		"READ_STAT", "FREE_STAT", "RETURN_STAT", "EXIT_STAT", "PRINT_STAT", "PRINTLN_STAT", 
		"IF_STAT", "THEN_STAT", "ELSE_STAT", "FI_STAT", "WHILE_STAT", "DO_STAT", 
		"DONE_STAT", "BEGIN_STAT", "END_STAT", "COMPOSITION_STAT", "INT", "BOOL", 
		"CHAR", "STRING", "NEWPAIR", "PAIR", "FST", "SND", "NOT", "MINUS", "LENGTH", 
		"ORD", "CHR", "MULTIPLY", "DIVISION", "MODULO", "PLUS", "GREATER", "GREATER_EQ", 
		"SMALLER", "SMALLER_EQ", "EQ", "NOT_EQ", "AND", "OR", "DIGIT", "INT_SIGN", 
		"ESCAPED_CHAR", "CHARACTER", "IDENT", "INT_LITERAL", "BOOL_LITERAL", "CHAR_LITERAL", 
		"STR_LITERAL", "PAIR_LITERAL", "COMMENT"
	};


	public WACCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WACCLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u0185\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\6\2\u0081\n\2\r\2\16\2\u0082\3\2\3\2\3\3\3\3\3\4\3\4"+
		"\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\35"+
		"\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3*\3"+
		"*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\62"+
		"\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\38\38\38\58\u014f\n8\39\39\79\u0153\n9\f9\169\u0156\139\3:\5:\u0159\n"+
		":\3:\6:\u015c\n:\r:\16:\u015d\3;\3;\3;\3;\3;\3;\3;\3;\3;\5;\u0169\n;\3"+
		"<\3<\3<\3<\3=\3=\7=\u0171\n=\f=\16=\u0174\13=\3=\3=\3>\3>\3>\3>\3>\3?"+
		"\3?\7?\u017f\n?\f?\16?\u0182\13?\3?\3?\2\2@\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\65i\2k\2m\2o\2q\66s\67u8w9y:{;}<\3\2\t\5"+
		"\2\13\f\17\17\"\"\4\2--//\13\2$$))\62\62^^ddhhppttvv\6\2$$))^^``\5\2C"+
		"\\aac|\6\2\62;C\\aac|\5\2\f\f))``\u0188\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3"+
		"\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2"+
		"\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35"+
		"\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)"+
		"\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2"+
		"\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2"+
		"A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3"+
		"\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2"+
		"\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2"+
		"g\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3"+
		"\2\2\2\2}\3\2\2\2\3\u0080\3\2\2\2\5\u0086\3\2\2\2\7\u0088\3\2\2\2\t\u008a"+
		"\3\2\2\2\13\u008c\3\2\2\2\r\u008e\3\2\2\2\17\u0091\3\2\2\2\21\u0093\3"+
		"\2\2\2\23\u0098\3\2\2\2\25\u009d\3\2\2\2\27\u009f\3\2\2\2\31\u00a4\3\2"+
		"\2\2\33\u00a9\3\2\2\2\35\u00b0\3\2\2\2\37\u00b5\3\2\2\2!\u00bb\3\2\2\2"+
		"#\u00c3\3\2\2\2%\u00c6\3\2\2\2\'\u00cb\3\2\2\2)\u00d0\3\2\2\2+\u00d3\3"+
		"\2\2\2-\u00d9\3\2\2\2/\u00dc\3\2\2\2\61\u00e1\3\2\2\2\63\u00e7\3\2\2\2"+
		"\65\u00eb\3\2\2\2\67\u00ed\3\2\2\29\u00f1\3\2\2\2;\u00f6\3\2\2\2=\u00fb"+
		"\3\2\2\2?\u0102\3\2\2\2A\u010a\3\2\2\2C\u010f\3\2\2\2E\u0113\3\2\2\2G"+
		"\u0117\3\2\2\2I\u0119\3\2\2\2K\u011b\3\2\2\2M\u011f\3\2\2\2O\u0123\3\2"+
		"\2\2Q\u0127\3\2\2\2S\u0129\3\2\2\2U\u012b\3\2\2\2W\u012d\3\2\2\2Y\u012f"+
		"\3\2\2\2[\u0131\3\2\2\2]\u0134\3\2\2\2_\u0136\3\2\2\2a\u0139\3\2\2\2c"+
		"\u013c\3\2\2\2e\u013f\3\2\2\2g\u0142\3\2\2\2i\u0145\3\2\2\2k\u0147\3\2"+
		"\2\2m\u0149\3\2\2\2o\u014e\3\2\2\2q\u0150\3\2\2\2s\u0158\3\2\2\2u\u0168"+
		"\3\2\2\2w\u016a\3\2\2\2y\u016e\3\2\2\2{\u0177\3\2\2\2}\u017c\3\2\2\2\177"+
		"\u0081\t\2\2\2\u0080\177\3\2\2\2\u0081\u0082\3\2\2\2\u0082\u0080\3\2\2"+
		"\2\u0082\u0083\3\2\2\2\u0083\u0084\3\2\2\2\u0084\u0085\b\2\2\2\u0085\4"+
		"\3\2\2\2\u0086\u0087\7*\2\2\u0087\6\3\2\2\2\u0088\u0089\7+\2\2\u0089\b"+
		"\3\2\2\2\u008a\u008b\7]\2\2\u008b\n\3\2\2\2\u008c\u008d\7_\2\2\u008d\f"+
		"\3\2\2\2\u008e\u008f\7k\2\2\u008f\u0090\7u\2\2\u0090\16\3\2\2\2\u0091"+
		"\u0092\7.\2\2\u0092\20\3\2\2\2\u0093\u0094\7e\2\2\u0094\u0095\7c\2\2\u0095"+
		"\u0096\7n\2\2\u0096\u0097\7n\2\2\u0097\22\3\2\2\2\u0098\u0099\7u\2\2\u0099"+
		"\u009a\7m\2\2\u009a\u009b\7k\2\2\u009b\u009c\7r\2\2\u009c\24\3\2\2\2\u009d"+
		"\u009e\7?\2\2\u009e\26\3\2\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7g\2\2\u00a1"+
		"\u00a2\7c\2\2\u00a2\u00a3\7f\2\2\u00a3\30\3\2\2\2\u00a4\u00a5\7h\2\2\u00a5"+
		"\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7g\2\2\u00a8\32\3\2\2\2\u00a9"+
		"\u00aa\7t\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7w\2\2"+
		"\u00ad\u00ae\7t\2\2\u00ae\u00af\7p\2\2\u00af\34\3\2\2\2\u00b0\u00b1\7"+
		"g\2\2\u00b1\u00b2\7z\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7v\2\2\u00b4\36"+
		"\3\2\2\2\u00b5\u00b6\7r\2\2\u00b6\u00b7\7t\2\2\u00b7\u00b8\7k\2\2\u00b8"+
		"\u00b9\7p\2\2\u00b9\u00ba\7v\2\2\u00ba \3\2\2\2\u00bb\u00bc\7r\2\2\u00bc"+
		"\u00bd\7t\2\2\u00bd\u00be\7k\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0\7v\2\2"+
		"\u00c0\u00c1\7n\2\2\u00c1\u00c2\7p\2\2\u00c2\"\3\2\2\2\u00c3\u00c4\7k"+
		"\2\2\u00c4\u00c5\7h\2\2\u00c5$\3\2\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8"+
		"\7j\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7p\2\2\u00ca&\3\2\2\2\u00cb\u00cc"+
		"\7g\2\2\u00cc\u00cd\7n\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf\7g\2\2\u00cf"+
		"(\3\2\2\2\u00d0\u00d1\7h\2\2\u00d1\u00d2\7k\2\2\u00d2*\3\2\2\2\u00d3\u00d4"+
		"\7y\2\2\u00d4\u00d5\7j\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7n\2\2\u00d7"+
		"\u00d8\7g\2\2\u00d8,\3\2\2\2\u00d9\u00da\7f\2\2\u00da\u00db\7q\2\2\u00db"+
		".\3\2\2\2\u00dc\u00dd\7f\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7p\2\2\u00df"+
		"\u00e0\7g\2\2\u00e0\60\3\2\2\2\u00e1\u00e2\7d\2\2\u00e2\u00e3\7g\2\2\u00e3"+
		"\u00e4\7i\2\2\u00e4\u00e5\7k\2\2\u00e5\u00e6\7p\2\2\u00e6\62\3\2\2\2\u00e7"+
		"\u00e8\7g\2\2\u00e8\u00e9\7p\2\2\u00e9\u00ea\7f\2\2\u00ea\64\3\2\2\2\u00eb"+
		"\u00ec\7=\2\2\u00ec\66\3\2\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7p\2\2\u00ef"+
		"\u00f0\7v\2\2\u00f08\3\2\2\2\u00f1\u00f2\7d\2\2\u00f2\u00f3\7q\2\2\u00f3"+
		"\u00f4\7q\2\2\u00f4\u00f5\7n\2\2\u00f5:\3\2\2\2\u00f6\u00f7\7e\2\2\u00f7"+
		"\u00f8\7j\2\2\u00f8\u00f9\7c\2\2\u00f9\u00fa\7t\2\2\u00fa<\3\2\2\2\u00fb"+
		"\u00fc\7u\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7k\2\2"+
		"\u00ff\u0100\7p\2\2\u0100\u0101\7i\2\2\u0101>\3\2\2\2\u0102\u0103\7p\2"+
		"\2\u0103\u0104\7g\2\2\u0104\u0105\7y\2\2\u0105\u0106\7r\2\2\u0106\u0107"+
		"\7c\2\2\u0107\u0108\7k\2\2\u0108\u0109\7t\2\2\u0109@\3\2\2\2\u010a\u010b"+
		"\7r\2\2\u010b\u010c\7c\2\2\u010c\u010d\7k\2\2\u010d\u010e\7t\2\2\u010e"+
		"B\3\2\2\2\u010f\u0110\7h\2\2\u0110\u0111\7u\2\2\u0111\u0112\7v\2\2\u0112"+
		"D\3\2\2\2\u0113\u0114\7u\2\2\u0114\u0115\7p\2\2\u0115\u0116\7f\2\2\u0116"+
		"F\3\2\2\2\u0117\u0118\7#\2\2\u0118H\3\2\2\2\u0119\u011a\7/\2\2\u011aJ"+
		"\3\2\2\2\u011b\u011c\7n\2\2\u011c\u011d\7g\2\2\u011d\u011e\7p\2\2\u011e"+
		"L\3\2\2\2\u011f\u0120\7q\2\2\u0120\u0121\7t\2\2\u0121\u0122\7f\2\2\u0122"+
		"N\3\2\2\2\u0123\u0124\7e\2\2\u0124\u0125\7j\2\2\u0125\u0126\7t\2\2\u0126"+
		"P\3\2\2\2\u0127\u0128\7,\2\2\u0128R\3\2\2\2\u0129\u012a\7\61\2\2\u012a"+
		"T\3\2\2\2\u012b\u012c\7\'\2\2\u012cV\3\2\2\2\u012d\u012e\7-\2\2\u012e"+
		"X\3\2\2\2\u012f\u0130\7@\2\2\u0130Z\3\2\2\2\u0131\u0132\7@\2\2\u0132\u0133"+
		"\7?\2\2\u0133\\\3\2\2\2\u0134\u0135\7>\2\2\u0135^\3\2\2\2\u0136\u0137"+
		"\7>\2\2\u0137\u0138\7?\2\2\u0138`\3\2\2\2\u0139\u013a\7?\2\2\u013a\u013b"+
		"\7?\2\2\u013bb\3\2\2\2\u013c\u013d\7#\2\2\u013d\u013e\7?\2\2\u013ed\3"+
		"\2\2\2\u013f\u0140\7(\2\2\u0140\u0141\7(\2\2\u0141f\3\2\2\2\u0142\u0143"+
		"\7~\2\2\u0143\u0144\7~\2\2\u0144h\3\2\2\2\u0145\u0146\4\62;\2\u0146j\3"+
		"\2\2\2\u0147\u0148\t\3\2\2\u0148l\3\2\2\2\u0149\u014a\t\4\2\2\u014an\3"+
		"\2\2\2\u014b\u014f\t\5\2\2\u014c\u014d\7^\2\2\u014d\u014f\5m\67\2\u014e"+
		"\u014b\3\2\2\2\u014e\u014c\3\2\2\2\u014fp\3\2\2\2\u0150\u0154\t\6\2\2"+
		"\u0151\u0153\t\7\2\2\u0152\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152"+
		"\3\2\2\2\u0154\u0155\3\2\2\2\u0155r\3\2\2\2\u0156\u0154\3\2\2\2\u0157"+
		"\u0159\5k\66\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015b\3\2"+
		"\2\2\u015a\u015c\5i\65\2\u015b\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d"+
		"\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015et\3\2\2\2\u015f\u0160\7v\2\2\u0160"+
		"\u0161\7t\2\2\u0161\u0162\7w\2\2\u0162\u0169\7g\2\2\u0163\u0164\7h\2\2"+
		"\u0164\u0165\7c\2\2\u0165\u0166\7n\2\2\u0166\u0167\7u\2\2\u0167\u0169"+
		"\7g\2\2\u0168\u015f\3\2\2\2\u0168\u0163\3\2\2\2\u0169v\3\2\2\2\u016a\u016b"+
		"\7)\2\2\u016b\u016c\5o8\2\u016c\u016d\7)\2\2\u016dx\3\2\2\2\u016e\u0172"+
		"\7$\2\2\u016f\u0171\5o8\2\u0170\u016f\3\2\2\2\u0171\u0174\3\2\2\2\u0172"+
		"\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0175\3\2\2\2\u0174\u0172\3\2"+
		"\2\2\u0175\u0176\7$\2\2\u0176z\3\2\2\2\u0177\u0178\7p\2\2\u0178\u0179"+
		"\7w\2\2\u0179\u017a\7n\2\2\u017a\u017b\7n\2\2\u017b|\3\2\2\2\u017c\u0180"+
		"\7%\2\2\u017d\u017f\t\b\2\2\u017e\u017d\3\2\2\2\u017f\u0182\3\2\2\2\u0180"+
		"\u017e\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0180\3\2"+
		"\2\2\u0183\u0184\7\f\2\2\u0184~\3\2\2\2\13\2\u0082\u014e\u0154\u0158\u015d"+
		"\u0168\u0172\u0180\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}