// Generated from ./WACCLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WACCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, COMMENT=2, OPEN_PARENTHESES=3, CLOSE_PARENTHESES=4, OPEN_SQUARE_BRACKET=5, 
		CLOSE_SQUARE_BRACKET=6, IS=7, COMMA=8, CALL_FUNC=9, SKIP_STAT=10, ASSIGN_STAT=11, 
		READ_STAT=12, FREE_STAT=13, RETURN_STAT=14, EXIT_STAT=15, PRINT_STAT=16, 
		PRINTLN_STAT=17, IF_STAT=18, THEN_STAT=19, ELSE_STAT=20, FI_STAT=21, FOR_STAT=22, 
		WHILE_STAT=23, DO_STAT=24, DONE_STAT=25, BEGIN_STAT=26, END_STAT=27, COMPOSITION_STAT=28, 
		INT=29, BOOL=30, CHAR=31, STRING=32, NEWPAIR=33, PAIR=34, FST=35, SND=36, 
		NOT=37, MINUS=38, LEN=39, ORD=40, CHR=41, MULTIPLY=42, DIVISION=43, MODULO=44, 
		PLUS=45, GREATER=46, GREATER_EQ=47, SMALLER=48, SMALLER_EQ=49, EQ=50, 
		NOT_EQ=51, AND=52, OR=53, INT_LITERAL=54, BOOL_LITERAL=55, CHAR_LITERAL=56, 
		STR_LITERAL=57, PAIR_LITERAL=58, IDENT=59;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'"
	};
	public static final String[] ruleNames = {
		"WS", "COMMENT", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_SQUARE_BRACKET", 
		"CLOSE_SQUARE_BRACKET", "IS", "COMMA", "CALL_FUNC", "SKIP_STAT", "ASSIGN_STAT", 
		"READ_STAT", "FREE_STAT", "RETURN_STAT", "EXIT_STAT", "PRINT_STAT", "PRINTLN_STAT", 
		"IF_STAT", "THEN_STAT", "ELSE_STAT", "FI_STAT", "FOR_STAT", "WHILE_STAT", 
		"DO_STAT", "DONE_STAT", "BEGIN_STAT", "END_STAT", "COMPOSITION_STAT", 
		"INT", "BOOL", "CHAR", "STRING", "NEWPAIR", "PAIR", "FST", "SND", "NOT", 
		"MINUS", "LEN", "ORD", "CHR", "MULTIPLY", "DIVISION", "MODULO", "PLUS", 
		"GREATER", "GREATER_EQ", "SMALLER", "SMALLER_EQ", "EQ", "NOT_EQ", "AND", 
		"OR", "DIGIT", "ESCAPED_CHAR", "CHARACTER", "INT_LITERAL", "BOOL_LITERAL", 
		"CHAR_LITERAL", "STR_LITERAL", "PAIR_LITERAL", "IDENT"
	};


	public WACCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WACCLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u0186\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\6\2\u0081\n\2\r\2\16\2\u0082\3\2\3\2\3\3\3\3\7\3\u0089"+
		"\n\3\f\3\16\3\u008c\13\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3"+
		"\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3"+
		"\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3"+
		"!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%"+
		"\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3,\3,\3-\3"+
		"-\3.\3.\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3"+
		"\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\38\38\39\39\39\5"+
		"9\u015c\n9\3:\6:\u015f\n:\r:\16:\u0160\3;\3;\3;\3;\3;\3;\3;\3;\3;\5;\u016c"+
		"\n;\3<\3<\3<\3<\3=\3=\7=\u0174\n=\f=\16=\u0177\13=\3=\3=\3>\3>\3>\3>\3"+
		">\3?\3?\7?\u0182\n?\f?\16?\u0185\13?\2\2@\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m\2o\2q\2s8u9w:y;{<}=\3\2\b\5"+
		"\2\13\f\17\17\"\"\3\2\f\f\13\2$$))\62\62^^ddhhppttvv\5\2$$))^^\5\2C\\"+
		"aac|\6\2\62;C\\aac|\u0189\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2"+
		"\2}\3\2\2\2\3\u0080\3\2\2\2\5\u0086\3\2\2\2\7\u0091\3\2\2\2\t\u0093\3"+
		"\2\2\2\13\u0095\3\2\2\2\r\u0097\3\2\2\2\17\u0099\3\2\2\2\21\u009c\3\2"+
		"\2\2\23\u009e\3\2\2\2\25\u00a3\3\2\2\2\27\u00a8\3\2\2\2\31\u00aa\3\2\2"+
		"\2\33\u00af\3\2\2\2\35\u00b4\3\2\2\2\37\u00bb\3\2\2\2!\u00c0\3\2\2\2#"+
		"\u00c6\3\2\2\2%\u00ce\3\2\2\2\'\u00d1\3\2\2\2)\u00d6\3\2\2\2+\u00db\3"+
		"\2\2\2-\u00de\3\2\2\2/\u00e2\3\2\2\2\61\u00e8\3\2\2\2\63\u00eb\3\2\2\2"+
		"\65\u00f0\3\2\2\2\67\u00f6\3\2\2\29\u00fa\3\2\2\2;\u00fc\3\2\2\2=\u0100"+
		"\3\2\2\2?\u0105\3\2\2\2A\u010a\3\2\2\2C\u0111\3\2\2\2E\u0119\3\2\2\2G"+
		"\u011e\3\2\2\2I\u0122\3\2\2\2K\u0126\3\2\2\2M\u0128\3\2\2\2O\u012a\3\2"+
		"\2\2Q\u012e\3\2\2\2S\u0132\3\2\2\2U\u0136\3\2\2\2W\u0138\3\2\2\2Y\u013a"+
		"\3\2\2\2[\u013c\3\2\2\2]\u013e\3\2\2\2_\u0140\3\2\2\2a\u0143\3\2\2\2c"+
		"\u0145\3\2\2\2e\u0148\3\2\2\2g\u014b\3\2\2\2i\u014e\3\2\2\2k\u0151\3\2"+
		"\2\2m\u0154\3\2\2\2o\u0156\3\2\2\2q\u015b\3\2\2\2s\u015e\3\2\2\2u\u016b"+
		"\3\2\2\2w\u016d\3\2\2\2y\u0171\3\2\2\2{\u017a\3\2\2\2}\u017f\3\2\2\2\177"+
		"\u0081\t\2\2\2\u0080\177\3\2\2\2\u0081\u0082\3\2\2\2\u0082\u0080\3\2\2"+
		"\2\u0082\u0083\3\2\2\2\u0083\u0084\3\2\2\2\u0084\u0085\b\2\2\2\u0085\4"+
		"\3\2\2\2\u0086\u008a\7%\2\2\u0087\u0089\n\3\2\2\u0088\u0087\3\2\2\2\u0089"+
		"\u008c\3\2\2\2\u008a\u0088\3\2\2\2\u008a\u008b\3\2\2\2\u008b\u008d\3\2"+
		"\2\2\u008c\u008a\3\2\2\2\u008d\u008e\7\f\2\2\u008e\u008f\3\2\2\2\u008f"+
		"\u0090\b\3\2\2\u0090\6\3\2\2\2\u0091\u0092\7*\2\2\u0092\b\3\2\2\2\u0093"+
		"\u0094\7+\2\2\u0094\n\3\2\2\2\u0095\u0096\7]\2\2\u0096\f\3\2\2\2\u0097"+
		"\u0098\7_\2\2\u0098\16\3\2\2\2\u0099\u009a\7k\2\2\u009a\u009b\7u\2\2\u009b"+
		"\20\3\2\2\2\u009c\u009d\7.\2\2\u009d\22\3\2\2\2\u009e\u009f\7e\2\2\u009f"+
		"\u00a0\7c\2\2\u00a0\u00a1\7n\2\2\u00a1\u00a2\7n\2\2\u00a2\24\3\2\2\2\u00a3"+
		"\u00a4\7u\2\2\u00a4\u00a5\7m\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7r\2\2"+
		"\u00a7\26\3\2\2\2\u00a8\u00a9\7?\2\2\u00a9\30\3\2\2\2\u00aa\u00ab\7t\2"+
		"\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7f\2\2\u00ae\32\3"+
		"\2\2\2\u00af\u00b0\7h\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7g\2\2\u00b2"+
		"\u00b3\7g\2\2\u00b3\34\3\2\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7g\2\2\u00b6"+
		"\u00b7\7v\2\2\u00b7\u00b8\7w\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7p\2\2"+
		"\u00ba\36\3\2\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd\7z\2\2\u00bd\u00be\7"+
		"k\2\2\u00be\u00bf\7v\2\2\u00bf \3\2\2\2\u00c0\u00c1\7r\2\2\u00c1\u00c2"+
		"\7t\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7v\2\2\u00c5"+
		"\"\3\2\2\2\u00c6\u00c7\7r\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7k\2\2\u00c9"+
		"\u00ca\7p\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7p\2\2"+
		"\u00cd$\3\2\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7h\2\2\u00d0&\3\2\2\2\u00d1"+
		"\u00d2\7v\2\2\u00d2\u00d3\7j\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7p\2\2"+
		"\u00d5(\3\2\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7n\2\2\u00d8\u00d9\7u\2"+
		"\2\u00d9\u00da\7g\2\2\u00da*\3\2\2\2\u00db\u00dc\7h\2\2\u00dc\u00dd\7"+
		"k\2\2\u00dd,\3\2\2\2\u00de\u00df\7h\2\2\u00df\u00e0\7q\2\2\u00e0\u00e1"+
		"\7t\2\2\u00e1.\3\2\2\2\u00e2\u00e3\7y\2\2\u00e3\u00e4\7j\2\2\u00e4\u00e5"+
		"\7k\2\2\u00e5\u00e6\7n\2\2\u00e6\u00e7\7g\2\2\u00e7\60\3\2\2\2\u00e8\u00e9"+
		"\7f\2\2\u00e9\u00ea\7q\2\2\u00ea\62\3\2\2\2\u00eb\u00ec\7f\2\2\u00ec\u00ed"+
		"\7q\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7g\2\2\u00ef\64\3\2\2\2\u00f0\u00f1"+
		"\7d\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3\7i\2\2\u00f3\u00f4\7k\2\2\u00f4"+
		"\u00f5\7p\2\2\u00f5\66\3\2\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7p\2\2\u00f8"+
		"\u00f9\7f\2\2\u00f98\3\2\2\2\u00fa\u00fb\7=\2\2\u00fb:\3\2\2\2\u00fc\u00fd"+
		"\7k\2\2\u00fd\u00fe\7p\2\2\u00fe\u00ff\7v\2\2\u00ff<\3\2\2\2\u0100\u0101"+
		"\7d\2\2\u0101\u0102\7q\2\2\u0102\u0103\7q\2\2\u0103\u0104\7n\2\2\u0104"+
		">\3\2\2\2\u0105\u0106\7e\2\2\u0106\u0107\7j\2\2\u0107\u0108\7c\2\2\u0108"+
		"\u0109\7t\2\2\u0109@\3\2\2\2\u010a\u010b\7u\2\2\u010b\u010c\7v\2\2\u010c"+
		"\u010d\7t\2\2\u010d\u010e\7k\2\2\u010e\u010f\7p\2\2\u010f\u0110\7i\2\2"+
		"\u0110B\3\2\2\2\u0111\u0112\7p\2\2\u0112\u0113\7g\2\2\u0113\u0114\7y\2"+
		"\2\u0114\u0115\7r\2\2\u0115\u0116\7c\2\2\u0116\u0117\7k\2\2\u0117\u0118"+
		"\7t\2\2\u0118D\3\2\2\2\u0119\u011a\7r\2\2\u011a\u011b\7c\2\2\u011b\u011c"+
		"\7k\2\2\u011c\u011d\7t\2\2\u011dF\3\2\2\2\u011e\u011f\7h\2\2\u011f\u0120"+
		"\7u\2\2\u0120\u0121\7v\2\2\u0121H\3\2\2\2\u0122\u0123\7u\2\2\u0123\u0124"+
		"\7p\2\2\u0124\u0125\7f\2\2\u0125J\3\2\2\2\u0126\u0127\7#\2\2\u0127L\3"+
		"\2\2\2\u0128\u0129\7/\2\2\u0129N\3\2\2\2\u012a\u012b\7n\2\2\u012b\u012c"+
		"\7g\2\2\u012c\u012d\7p\2\2\u012dP\3\2\2\2\u012e\u012f\7q\2\2\u012f\u0130"+
		"\7t\2\2\u0130\u0131\7f\2\2\u0131R\3\2\2\2\u0132\u0133\7e\2\2\u0133\u0134"+
		"\7j\2\2\u0134\u0135\7t\2\2\u0135T\3\2\2\2\u0136\u0137\7,\2\2\u0137V\3"+
		"\2\2\2\u0138\u0139\7\61\2\2\u0139X\3\2\2\2\u013a\u013b\7\'\2\2\u013bZ"+
		"\3\2\2\2\u013c\u013d\7-\2\2\u013d\\\3\2\2\2\u013e\u013f\7@\2\2\u013f^"+
		"\3\2\2\2\u0140\u0141\7@\2\2\u0141\u0142\7?\2\2\u0142`\3\2\2\2\u0143\u0144"+
		"\7>\2\2\u0144b\3\2\2\2\u0145\u0146\7>\2\2\u0146\u0147\7?\2\2\u0147d\3"+
		"\2\2\2\u0148\u0149\7?\2\2\u0149\u014a\7?\2\2\u014af\3\2\2\2\u014b\u014c"+
		"\7#\2\2\u014c\u014d\7?\2\2\u014dh\3\2\2\2\u014e\u014f\7(\2\2\u014f\u0150"+
		"\7(\2\2\u0150j\3\2\2\2\u0151\u0152\7~\2\2\u0152\u0153\7~\2\2\u0153l\3"+
		"\2\2\2\u0154\u0155\4\62;\2\u0155n\3\2\2\2\u0156\u0157\t\4\2\2\u0157p\3"+
		"\2\2\2\u0158\u015c\n\5\2\2\u0159\u015a\7^\2\2\u015a\u015c\5o8\2\u015b"+
		"\u0158\3\2\2\2\u015b\u0159\3\2\2\2\u015cr\3\2\2\2\u015d\u015f\5m\67\2"+
		"\u015e\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161"+
		"\3\2\2\2\u0161t\3\2\2\2\u0162\u0163\7v\2\2\u0163\u0164\7t\2\2\u0164\u0165"+
		"\7w\2\2\u0165\u016c\7g\2\2\u0166\u0167\7h\2\2\u0167\u0168\7c\2\2\u0168"+
		"\u0169\7n\2\2\u0169\u016a\7u\2\2\u016a\u016c\7g\2\2\u016b\u0162\3\2\2"+
		"\2\u016b\u0166\3\2\2\2\u016cv\3\2\2\2\u016d\u016e\7)\2\2\u016e\u016f\5"+
		"q9\2\u016f\u0170\7)\2\2\u0170x\3\2\2\2\u0171\u0175\7$\2\2\u0172\u0174"+
		"\5q9\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173\3\2\2\2\u0175"+
		"\u0176\3\2\2\2\u0176\u0178\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u0179\7$"+
		"\2\2\u0179z\3\2\2\2\u017a\u017b\7p\2\2\u017b\u017c\7w\2\2\u017c\u017d"+
		"\7n\2\2\u017d\u017e\7n\2\2\u017e|\3\2\2\2\u017f\u0183\t\6\2\2\u0180\u0182"+
		"\t\7\2\2\u0181\u0180\3\2\2\2\u0182\u0185\3\2\2\2\u0183\u0181\3\2\2\2\u0183"+
		"\u0184\3\2\2\2\u0184~\3\2\2\2\u0185\u0183\3\2\2\2\n\2\u0082\u008a\u015b"+
		"\u0160\u016b\u0175\u0183\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}